/* 
  *  This software is the property of Moon's Information Technology Ltd.
  * 
  *  All rights reserved.
  * 
  *  The software is only to be used for development and research purposes.
  *  Commercial use is only permitted under license or agreement.
  * 
  *  Copyright (C)  Moon's Information Technology Ltd.
  *  
  *  Author: rupert@moonsit.co.uk
  * 
  * 
 */
package uk.co.moons.gui.components.testapps;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import uk.co.moons.control.ControlHierarchy;
import uk.co.moons.gui.components.ControlHierarchyEventMonitor;
import uk.co.moons.gui.controlpanel.display.ControlDisplayTypes;
import uk.co.moonsit.utils.Environment;

/**
 *
 * @author ReStart
 */
public class ControlFunctionJFrame extends javax.swing.JFrame {

    private ControlHierarchyEventMonitor monitor;
    private ControlHierarchy ch;

    /** Creates new form ControlFunctionJFrame */
    public ControlFunctionJFrame() {
        initComponents();
    }

    public ControlFunctionJFrame(ControlHierarchy ch) {
        this.ch=ch;
        monitor = new ControlHierarchyEventMonitor();
        monitor.setControlHierarchy(ch);
        initComponents();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlFunctionView = new uk.co.moons.gui.components.ControlFunctionView();
        inputControl = new ControlFunctionMonitor();

        controlFunctionView.setControlFunction(monitor, 0, "test", true, null);
        try {
            controlFunctionView.setControlDisplayTypes(new ControlDisplayTypes("test"));
        } catch (Exception e) {
            e.printStackTrace();
        }
        controlFunctionView1 = new uk.co.moons.gui.components.ControlFunctionView1();
        controlFunctionView1.setControlFunction(inputControl);
        try {
            controlFunctionView1.setControlDisplayTypes(new ControlDisplayTypes("test"));
        } catch (Exception e) {
            e.printStackTrace();
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        controlFunctionView.setName("controlFunctionView"); // NOI18N
        getContentPane().add(controlFunctionView);

        controlFunctionView1.setName("controlFunctionView1"); // NOI18N
        getContentPane().add(controlFunctionView1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void compute() throws Exception {
        inputControl.update();
        ch.iterate();
        monitor.update();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlFunctionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlFunctionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlFunctionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlFunctionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>





        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                String config = ".\\000-Sine.xml";
                ControlHierarchy ch = null;
                try {
                    ch = new ControlHierarchy(config);
                } catch (Exception ex) {
                    Logger.getLogger(ControlFunctionJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }

                final ControlFunctionJFrame cff = new ControlFunctionJFrame(ch);
                cff.setVisible(true);

                System.out.println("Running");
                int timerDelay = 100;
                final int maxCount = 20;
                new Timer(timerDelay, new ActionListener() {

                    private int count = 0;

                    @Override
                    public void actionPerformed(ActionEvent evt) {
                        if (count < maxCount) {
                            //df.repaint();
                            long r = (long) (count * 10000000);
                            //System.out.println(r);
                            Environment.getInstance().setRate(r);
                            try {
                                cff.compute();
                                
                                cff.repaint();
                            } catch (Exception ex) {
                                Logger.getLogger(ControlFunctionJFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            count++;
                        } else {
                            ((Timer) evt.getSource()).stop();
                        }
                    }
                }).start();



            }
        });
    }
    private ControlFunctionMonitor inputControl = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private uk.co.moons.gui.components.ControlFunctionView controlFunctionView;
    private uk.co.moons.gui.components.ControlFunctionView1 controlFunctionView1;
    // End of variables declaration//GEN-END:variables
}
